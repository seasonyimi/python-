# 装饰器
# 类似Java的注释，面向切面编程
# log函数是我们想给now加的装饰。now就相当于毛胚房，然后log这种函数可以给他装修
def log(func):
    def wrapper(*args,**kw):
        print('call %s():' %func.__name__)
        return func(*args,**kw)
    return wrapper
@log
def now():
    print('2020-10-18')
f = now
now = log(now)
print(f())
print(now())

# decorator本身需要传入参数
def log(text):
    def decorator(func):
        def wrapper(*args,**kw):
            print('%s %s():' %(text,func.__name__))
            return func(*args,**kw)
        return wrapper
    return decorator
# 首先执行log('execute'),返回的是decorator函数，再调用返回的函数
@log('execute')
def now():
    print('2020-10-18')
f=now()
now = log('execute')(now)
print(f)
print(now())
