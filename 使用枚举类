from enum import Enum
Month = Enum('Month',('Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'))

#value默认从1开始计数
for name,member in Month.__members__.items():
    print(name,'=>',member,',',member.value)

for member in Month.__members__.items():
    print("打印出member：",member)

#Enum 可以一组相关常量定义在一个class中，且class不变，而且成员可以直接比较
from enum import Enum,unique
#用成员名称引用枚举常量，又可以直接根据value值获得枚举常量
@unique  #检查保证没有重复值
class Weekday(Enum):
    Sun = 0
    Mon = 1
    Tue = 2
    Web = 3
    Thu = 4
    Fri = 5
    Sat = 6
    # test = 6
day1 = Weekday.Mon
print(day1)
print(day1.value)
print(day1 == Weekday.Mon)
print(day1 == Weekday.Tue)
print(Weekday(3))

#练习
#把Student的gender属性改造成枚举类型，可以避免使用字符串
from enum import Enum,unique
class Gender(Enum):
    Male = 0
    Female = 1
class Student(object):
    def __init__(self,name,gender):
        self.name = name
        self.gender = gender
    gender = Enum('Gender',('Male','Female'))
        
        
#测试
bart = Student('Bart',Gender.Male)
if bart.gender == Gender.Male:
    print("测试通过")
else:
    print("测试失败")
